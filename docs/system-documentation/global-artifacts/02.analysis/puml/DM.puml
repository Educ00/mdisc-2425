@startuml

skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam classAttributeIconSize 0
hide circle
hide methods

title Domain Model - Railway Simulation

class Map {
size
name
}

class City {
   name
   numberOfHouseBlocks
}

class Location{
X coordinates
Y coordinates
}

class Industry{
type
}

class Resource{
name
type
}

class Scenario{
}

class TimeRestriction{
    startDate
    endDate
}

class TechnologicalRestriction{
    availableLocomotives
    availableIndustries
}

class HistoricalRestriction{
    name
    effects
}

class Simulator{
status
}

class RailwayNetwork{
}

class Station{
name
type
economic radius
cost
supply
demand
}

class Train{
}

class Route{
}

class Cargo{
deliverValue
status
}

class CargoType{
type
}

class RailwayLine{
length
type
electrification
}

class Locomotive{
type
power
acceleration
topSpeed
startYearOfOperation
fuelCost
maintenancePerYear
acquisitionPrice
cost
serialNumber
}

class Carriage{
}

class UpgradeBuilding{
type
availabilityDate
exclusivityGroup
}

class Editor{
}

class Player{
budget
}

class ProductOwner{
}


Map "1" ---- "0..*" City : contains >
Map "1" ---- "0..*" RailwayNetwork : contains >
Scenario "1" ---- "1" Map : uses >
Map "1" ---- "0..*" Station : contains >
Map "1" ---- "0..*" Industry : contains >
City "1" ---- "1" Location : bears >
Industry "1" ---- "1" Location : bears >
Station "1" ---- "1" Location : bears >
City "1" ---- "0..*" Station : is served by >
City "1" ---- "0..*" Industry : contains >
Industry "1" ---- "0..*" Resource : generates >
Industry "1" ---- "0..*" Resource : transforms >
Industry "1" ---- "0..*" Resource : imports >
Industry "1" ---- "0..*" Resource : exports >
Scenario "1" ---- "1" TimeRestriction : includes >
Scenario "1" ---- "1..*" TechnologicalRestriction : contains >
Scenario "1" ---- "1..*" HistoricalRestriction : comprises >
Simulator "1" ---- "1" RailwayNetwork : creates >
Simulator "1" ---- "1..*" Cargo : generates >
RailwayNetwork "1" ---- "1..*" Station : is composed of >
Station "1" ---- "1..*" City : serves >
Station "1" ---- "0..*" Industry : serves >
RailwayNetwork "1" ---- "1..*" RailwayLine : is composed of >
RailwayNetwork "1" ---- "1..*" Train : is composed of >
Train "1" ---- "1..*" Cargo : transports >
Train "1" ---- "1" Route : follows >
RailwayNetwork "1" ---- "1" Route : has >
Cargo "1..*" ---- "1" Station : is collected at >
Cargo "1" ---- "1" CargoType : has >
Station "1" ---- "1..*" UpgradeBuilding : upgraded with >
RailwayLine "1" ---- "1..*" Station : connects >
Train "1" ---- "1..*" Locomotive : is composed of >
Train "1" ---- "1..*" Carriage : is composed of >
Carriage "1" ---- "1" CargoType : transports >
Train "1" ---- "1..*" Station : passes through >
Route "1" ---- "1..*" Station : is a list of >
Editor "1" ---- "1..*" Map : creates >
Editor "1" ---- "1..*" Industry : adds >
Editor "1" ---- "1..*" City : adds >
Editor "1" ---- "1..*" Scenario : creates >
Player "1" ---- "1..*" Station : builds >
Player "1" ---- "1..*" Station : upgrades >
Player "1" ---- "1..*" Station : lists >
Player "1" ---- "1..*" RailwayLine : builds >
Player "1" ---- "1..*" Locomotive : buys >
Player "1" ---- "1..*" Train : assigns >
Player "1" ---- "1..*" Train : lists >
ProductOwner "1" ---- "1" Simulator : creates >


Industry "1" -- "0..*" Cargo : generates >
Industry "1" -- "0..*" Cargo : transforms >
City "1" -- "0..*" Cargo : generates >
City "1" -- "0..*" Cargo : consumes >
City "1" -- "0..*" Cargo : transforms >


@enduml