@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Player" as PLAYER_ACTOR
participant ":BuildStationUI" as UI
participant ":BuildStationController" as CTRL
participant "Repositories" as REPOS
participant "repositories\n:Repositories" as REPOS_SINGLETON
participant "stationRepository\n:StationRepository" as STATION_REPO
participant "mapRepository\n:MapRepository" as MAP_REPO
participant "map\n:Map" as MAP
participant "player\n:Player" as PLAYER
participant "station\n:Station" as STATION

activate PLAYER_ACTOR

PLAYER_ACTOR -> UI : requests to build a station
activate UI

UI --> CTRL ** : create()

UI -> CTRL : getAvailableStationTypes()

activate CTRL
CTRL -> REPOS : getInstance()
activate REPOS
REPOS --> CTRL : repositories
deactivate REPOS

CTRL -> REPOS_SINGLETON : getStationRepository()
activate REPOS_SINGLETON
REPOS_SINGLETON --> CTRL : stationRepository
deactivate REPOS_SINGLETON

CTRL -> STATION_REPO : getAvailableStationTypes()
activate STATION_REPO
STATION_REPO --> CTRL : stationTypes
deactivate STATION_REPO

CTRL --> UI : stationTypes
deactivate CTRL

UI -> PLAYER_ACTOR : shows available station types
deactivate UI

PLAYER_ACTOR -> UI : selects station type
activate UI


opt station type is "Station"
    UI -> PLAYER_ACTOR : requests station center (NE, SE, NW, SW)
    PLAYER_ACTOR -> UI : provides station center
end

UI --> CTRL : checkPlayerBudget(stationType)
activate CTRL

CTRL -> PLAYER : hasBudgetFor(stationType)
activate PLAYER

PLAYER --> CTRL : true/false
deactivate PLAYER

alt insufficient budget
    CTRL --> UI : false
    deactivate CTRL
    UI -> PLAYER_ACTOR : shows warning
    deactivate UI
    deactivate PLAYER_ACTOR
    else sufficient budget
    activate CTRL

    CTRL --> UI : true
    deactivate CTRL
    activate UI
    UI -> PLAYER_ACTOR : requests station location
    deactivate UI
    activate PLAYER_ACTOR
end

PLAYER_ACTOR -> UI : provides location
activate UI


UI --> CTRL : checkOverbuilding(location)
activate CTRL

CTRL -> MAP : checkOverbuilding(location)
activate MAP

MAP --> CTRL : true/false
deactivate MAP

alt overbuilding detected
    CTRL --> UI : true
    deactivate CTRL
    UI -> PLAYER_ACTOR : shows warning
    deactivate UI
    deactivate PLAYER_ACTOR

else no overbuilding detected
    activate CTRL

    CTRL --> UI : false
    activate UI
    activate PLAYER_ACTOR

opt station type is not "Station"
    UI -> CTRL : calculateGeometricCenter(location)
    CTRL -> MAP : calculateGeometricCenter(location)
    activate MAP
    MAP --> CTRL : geometricCenter
    deactivate MAP
    CTRL --> UI : geometricCenter
end

UI -> CTRL : proposeStationName(location, stationType)

CTRL -> REPOS : getMapRepository()
activate REPOS
REPOS --> CTRL : mapRepository
deactivate REPOS

CTRL -> MAP_REPO : getcurrentMap()
activate MAP_REPO

MAP_REPO --> CTRL : map
deactivate MAP_REPO

CTRL -> MAP : proposeStationName(location, stationType)
activate MAP

MAP --> CTRL : proposedName
deactivate MAP

CTRL --> UI : proposedName
deactivate CTRL

UI -> PLAYER_ACTOR : shows proposed name

end

alt accepts proposed name
    PLAYER_ACTOR -> UI : confirms station name
else rejects proposed name
    UI -> PLAYER_ACTOR : requests alternative name
    PLAYER_ACTOR -> UI : provides alternative name
end

UI --> PLAYER_ACTOR : shows all station data (stationType, location, center, name) for final confirmation
PLAYER_ACTOR -> UI : confirms all data

UI -> CTRL : buildStation(stationType, location, center, name)
activate CTRL

CTRL -> MAP : buildStation(stationType, location, center, name)
activate MAP

MAP -> STATION : create(stationType, location, center, name)
MAP --> CTRL : station
deactivate MAP

CTRL -> STATION_REPO : save(station)
activate STATION_REPO
STATION_REPO --> CTRL : success
deactivate STATION_REPO

CTRL --> UI : success
deactivate CTRL

UI -> PLAYER_ACTOR : displays operation success
deactivate UI

deactivate PLAYER_ACTOR
@enduml
