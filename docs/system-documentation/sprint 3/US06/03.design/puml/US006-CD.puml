@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0

class UpgradeStationUI {
}

class UpgradeStationController {
    + UpgradeStationController()
    + getStationsAvailableForUpgrade() : List<StationDTO>
    + getAvailableUpgradeBuildings(station : Station) : List<UpgradeBuildingDTO>
    + getUpgradeBuildingByID(upgradeBuildingID : String) : UpgradeBuilding
    + applyUpgrade(station : Station, upgradeBuilding : UpgradeBuilding)
    - getCurrentDateFromSession() : Date
}

interface IRepositories {
    + getStationRepository() : IStationRepository
    + getUpgradeBuildingRepository() : IUpgradeBuildingRepository
}
class Repositories implements IRepositories {
    - Repositories()
    + {static} getInstance() : Repositories
    + getStationRepository() : IStationRepository
    + getUpgradeBuildingRepository() : IUpgradeBuildingRepository
}

interface IStationRepository {
    + getStationsAvailableForUpgrade() : List<Station>
    + getStationByID(stationID : String) : Station
}
class StationRepository implements IStationRepository {
    + getStationsAvailableForUpgrade() : List<Station>
    + getStationByID(stationID : String) : Station
}

interface IUpgradeBuildingRepository {
    + getAvailableUpgradeBuildings(station : Station, installedUpgradesList : List<UpgradeBuilding>, currentDate : Date) : List<UpgradeBuilding>
    + getUpgradeBuildingByID(upgradeBuildingID : String) : UpgradeBuilding
}
class UpgradeBuildingRepository implements IUpgradeBuildingRepository {
    + getAvailableUpgradeBuildings(station : Station, installedUpgradesList : List<UpgradeBuilding>, currentDate : Date) : List<UpgradeBuilding>
    + getUpgradeBuildingByID(upgradeBuildingID : String) : UpgradeBuilding
}

interface IStationMapper {
    + toDTO(stationList : List<Station>) : List<StationDTO>
    + toDTO(station : Station) : StationDTO
}
class StationMapper implements IStationMapper {
    + toDTO(stationList : List<Station>) : List<StationDTO>
    + toDTO(station : Station) : StationDTO
}

interface IUpgradeBuildingMapper {
    + toDTO(upgradeBuildingList : List<UpgradeBuilding>) : List<UpgradeBuildingDTO>
    + toDTO(upgradeBuilding : UpgradeBuilding) : UpgradeBuildingDTO
}
class UpgradeBuildingMapper implements IUpgradeBuildingMapper {
    + toDTO(upgradeBuildingList : List<UpgradeBuilding>) : List<UpgradeBuildingDTO>
    + toDTO(upgradeBuilding : UpgradeBuilding) : UpgradeBuildingDTO
}

class ApplicationSession {
    - ApplicationSession()
    + {static} getInstance() : ApplicationSession
    + getCurrentSession() : CurrentSession
}
class CurrentSession {
    + getCurrentScenario() : Scenario
}

class Station {
    + getUpgradesInstalled(station : Station) : List<UpgradeBuilding>
    + replaceBuilding(installedUpgrade : UpgradeBuilding, upgradeBuilding : UpgradeBuilding, station : Station)
    + addBuilding(upgradeBuilding : UpgradeBuilding, station : Station)
}

class UpgradeBuilding {
    + isInSameExclusivityGroup(upgradeBuilding : UpgradeBuilding, installedUpgrade : UpgradeBuilding) : boolean
}

class Scenario {
    + getCurrentDate() : Date
}

class StationDTO {
}
class UpgradeBuildingDTO {
}

UpgradeStationUI ..> UpgradeStationController
UpgradeStationController ..> IRepositories
Repositories ..|> IRepositories
Repositories --> IStationRepository
Repositories --> IUpgradeBuildingRepository
StationRepository ..|> IStationRepository
UpgradeBuildingRepository ..|> IUpgradeBuildingRepository
UpgradeStationController ..> IStationRepository
UpgradeStationController ..> IUpgradeBuildingRepository
UpgradeStationController ..> ApplicationSession
UpgradeStationController ..> IStationMapper
UpgradeStationController ..> IUpgradeBuildingMapper
ApplicationSession --> CurrentSession
UpgradeStationController ..> Station
UpgradeStationController ..> UpgradeBuilding
UpgradeStationController ..> StationDTO
UpgradeStationController ..> UpgradeBuildingDTO
UpgradeStationController ..> Scenario
IStationMapper <|.. StationMapper
IUpgradeBuildingMapper <|.. UpgradeBuildingMapper
StationMapper ..> Station
StationMapper ..> StationDTO
UpgradeBuildingMapper ..> UpgradeBuilding
UpgradeBuildingMapper ..> UpgradeBuildingDTO
StationRepository --> "*" Station : stations
UpgradeBuildingRepository --> "*" UpgradeBuilding : upgradeBuildings

Repositories -> "1" Repositories : instance
ApplicationSession -> "1" ApplicationSession : instance

@enduml