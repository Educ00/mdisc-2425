@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0

class Player {
    - budget : double
}

class UpgradeStationUI {
}

class UpgradeStationController {
    + getStationsAvailableForUpgrade() : List<Station>
    + getAvailableUpgradeBuildings(station : Station) : List<UpgradeBuilding>
    + applyUpgrade(station : Station, upgradeBuilding : UpgradeBuilding)
    + getUpgradePreview(upgradeBuilding : UpgradeBuilding, station : Station) : Map<String, Object>
}

class Repositories {
    - Repositories()
    + {static} getInstance() : Repositories
    + getStationRepository() : StationRepository
    + getUpgradeBuildingRepository() : UpgradeBuildingRepository
}

class StationRepository {
    + getStationsAvailableForUpgrade() : List<Station>
}

class UpgradeBuildingRepository {
    + getAvailableUpgradeBuildings(station : Station, installedUpgradesList : List<UpgradeBuilding>, currentDate : Date) : List<UpgradeBuilding>
}

class Station {
    - name : String
    - type : String
    - economicRadius : double
    - cost : double
    - supply : double
    - demand : double
    + getUpgradesInstalled(station : Station) : List<UpgradeBuilding>
    + replaceBuilding(installedUpgrade : UpgradeBuilding, upgradeBuilding : UpgradeBuilding)
    + addBuilding(upgradeBuilding : UpgradeBuilding)
    + getPerformanceImprovement(upgradeBuilding : UpgradeBuilding, station : Station) : Map<String, Object>
    + getUpgradePreview(upgradeBuilding : UpgradeBuilding, station : Station, performanceImprovement : double, cost : double) : Map<String, Object>
}

class UpgradeBuilding {
    - type : String
    - availabilityDate : Date
    - exclusivityGroup : String
    + isInSameExclusivityGroup(upgradeBuilding : UpgradeBuilding , installedUpgrade : UpgradeBuilding ) : boolean
    + getCost(upgradeBuilding : UpgradeBuilding) : double
}

class Scenario {
    + getCurrentDate() : Date
}

Player --> "*" Station : upgrades
Station --> "*" UpgradeBuilding : upgraded with
UpgradeStationUI ..> UpgradeStationController
UpgradeStationController .> Repositories
Repositories -> "1" Repositories : instance
Repositories --> "1" StationRepository : stationRepository
Repositories --> "1" UpgradeBuildingRepository : upgradeBuildingRepository
UpgradeStationController ..> StationRepository
UpgradeStationController ..> UpgradeBuildingRepository
UpgradeStationController ..> Scenario
UpgradeStationController ..> Station
UpgradeStationController ..> UpgradeBuilding
StationRepository --> "*" Station : stations
UpgradeBuildingRepository --> "*" UpgradeBuilding : upgradeBuildings

@enduml