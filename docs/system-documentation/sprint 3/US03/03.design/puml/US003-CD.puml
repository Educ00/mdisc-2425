@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0

class AddCityUI {
}

class AddCityController {
    + AddCityController()
    + getAvailableMaps() : List<MapDTO>
    + getMapByName(name : String) : MapDTO
    + validateCityName(mapDTO : MapDTO, name : String) : boolean
    + checkLocation(mapDTO : MapDTO, coord : Coordinates) : boolean
    + assignHouseBlocksAutomatically(mapDTO : MapDTO, cityLocation : Coordinates, nBlocks : int) : List<Coordinates>
    + createCity(mapDTO : MapDTO, dto : CityDTO, houseBlocks : List<Coordinates>) : boolean
    - getMapDomain(mapDTO : MapDTO) : Map
}

interface IRepositories {
    + getMapRepository() : IMapRepository
}

class Repositories implements IRepositories {
    - Repositories()
    + {static} getInstance() : Repositories
    + getMapRepository() : IMapRepository
}

interface IMapRepository {
    + getMapList() : List<Map>
    + getMapByName(name : String) : Map
}

class MapRepository implements IMapRepository {
    + getMapList() : List<Map>
    + getMapByName(name : String) : Map
}

class ApplicationSession {
    - ApplicationSession()
    + {static} getInstance() : ApplicationSession
    + getCurrentSession() : EditorSession
}

class EditorSession {
    + getEditorEmail() : String
}

interface IMapMapper {
    + toDTOList(maps : List<Map>) : List<MapDTO>
    + fromDTO(mapDTO : MapDTO) : Map
}

class MapMapper implements IMapMapper {
    + toDTOList(maps : List<Map>) : List<MapDTO>
    + fromDTO(mapDTO : MapDTO) : Map
}

class Map {
    + getName() : String
    + cityExists(name : String) : boolean
    + checkOverbuilding(coord : Coordinates) : boolean
    + addCity(city : City) : boolean
}

class City {
    - name : String
    - center : Coordinates
    - houseBlocks : List<Coordinates>
    + isValidName(name : String) : boolean
    + addHouseBlock(coord : Coordinates) : void
    + getHouseBlocks() : List<Coordinates>
}

class Coordinates {
    - x : int
    - y : int
    + Coordinates(x : int, y : int)
}

class CityDTO {
    + getName() : String
    + getCenter() : Coordinates
    + getNumberOfBlocks() : int
}

class MapDTO {
    + getName() : String
}

AddCityUI ..> AddCityController

AddCityController ..> IRepositories
Repositories ..|> IRepositories
Repositories --> IMapRepository
MapRepository ..|> IMapRepository

AddCityController ..> IMapRepository
AddCityController ..> IMapMapper
AddCityController ..> ApplicationSession
ApplicationSession --> EditorSession

AddCityController ..> MapDTO
AddCityController ..> CityDTO
AddCityController ..> Coordinates
AddCityController ..> City
AddCityController ..> Map

IMapMapper <|.. MapMapper
MapMapper ..> MapDTO
MapMapper ..> Map

Map --> City
Map ..> Coordinates
City --> Coordinates

ApplicationSession -> "1" ApplicationSession : instance
Repositories -> "1" Repositories : instance

@enduml
