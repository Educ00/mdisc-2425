@startuml
skinparam packageStyle rectangle
skinparam shadowing false
autonumber

actor "Editor" as EDITOR
participant ":AddCityUI" as UI
participant ":AddCityController" as CTRL
participant "Repositories" as REPOS
participant "repositories\n:Repositories" as REPOS_SINGLETON
participant "MapRepository\n:MapRepository" as MAP_REPO
participant "MapMapper" as MAP_MAPPER
participant "mapDTOList\n:MapDTOList" as DTO_LIST
participant "objDTO.MapDTO" as MAP_DTO
participant "ApplicationSession" as APP_SESSION
participant "appSession\n:ApplicationSession" as APP_SESSION_SINGLETON
participant "currentSession\n:UserSession" as CURRENT_SESSION


activate EDITOR
EDITOR -> UI : asks to add a new city
activate UI
UI --> CTRL : create()
activate CTRL


CTRL -> APP_SESSION: getInstance()
activate APP_SESSION
APP_SESSION --> CTRL: appSession
deactivate APP_SESSION

CTRL -> APP_SESSION_SINGLETON: getCurrentSession()
activate APP_SESSION_SINGLETON
APP_SESSION_SINGLETON --> CTRL: currentSession
deactivate APP_SESSION_SINGLETON

CTRL -> CURRENT_SESSION: getEditorEmail()
activate CURRENT_SESSION
CURRENT_SESSION --> CTRL: email
deactivate CURRENT_SESSION


CTRL -> REPOS : getInstance()
activate REPOS
REPOS --> CTRL : repositories
deactivate REPOS

CTRL -> REPOS_SINGLETON : getMapRepository()
activate REPOS_SINGLETON
REPOS_SINGLETON --> CTRL : MAP_REPO
deactivate REPOS_SINGLETON

CTRL -> MAP_REPO : getMapList()
activate MAP_REPO
MAP_REPO --> CTRL : listOfMaps
deactivate MAP_REPO

CTRL -> MAP_MAPPER : toDTOList(listOfMaps)
activate MAP_MAPPER
MAP_MAPPER --> DTO_LIST : create()

loop for each map in listOfMaps
    MAP_MAPPER -> MAP_REPO : map = get(i)
    MAP_MAPPER -> MAP_MAPPER : mapDTO = toDTO(map)
    activate MAP_MAPPER
    MAP_MAPPER -> MAP_DTO : create(...)
    deactivate MAP_MAPPER
    MAP_MAPPER --> DTO_LIST : add(mapDTO)
end loop

MAP_MAPPER --> CTRL : mapDTO_LIST
deactivate MAP_MAPPER

CTRL --> UI : mapDTO_LIST
deactivate CTRL

UI -> EDITOR : show map list and ask selection
deactivate UI


EDITOR -> UI : selects map
activate UI
UI --> EDITOR : ask for city name
deactivate UI

EDITOR -> UI : enters city name
activate UI
UI -> CTRL : validateCityName(mapDTO, cityName)
activate CTRL

CTRL -> MAP_MAPPER : fromDTO(mapDTO)
activate MAP_MAPPER
MAP_MAPPER --> CTRL : map
deactivate MAP_MAPPER

CTRL -> MAP : cityExists(cityName)
activate MAP
MAP --> CTRL : exists
deactivate MAP

alt name exists
    CTRL --> UI : show error
else
    CTRL --> UI : name valid
end
deactivate CTRL

UI -> EDITOR : ask for city location
deactivate UI

EDITOR -> UI : enters city coordinates
activate UI
UI -> CTRL : checkOverbuilding(mapDTO, location)
activate CTRL
CTRL -> MAP : isValidLocation(location)
activate MAP
MAP --> CTRL : valid
deactivate MAP
CTRL --> UI : valid
deactivate CTRL

UI -> EDITOR : ask about manual block assignment
deactivate UI


alt manual
    loop for each block
        UI -> EDITOR : ask block position
        EDITOR -> UI : send position
        UI -> CTRL : validate location
        activate CTRL
        CTRL -> MAP : isValidLocation(location)
        activate MAP
        MAP --> CTRL : valid
        deactivate MAP
        CTRL --> UI : valid
        deactivate CTRL
    end loop
else automatic
    UI -> CTRL : assignHouseBlocksAutomatically(map, location, nBlocks)
    activate CTRL
    CTRL -> CTRL : generate locations
    CTRL -> MAP : validate all locations
    activate MAP
    MAP --> CTRL : valid list
    deactivate MAP
    CTRL --> UI : houseBlocks
    deactivate CTRL
end

UI -> EDITOR : show summary and ask confirmation
deactivate UI

EDITOR -> UI : confirms
activate UI
UI -> CTRL : createCity(mapDTO, cityName, location, houseBlocks)
activate CTRL

CTRL -> MAP_MAPPER : fromDTO(mapDTO)
activate MAP_MAPPER
MAP_MAPPER --> CTRL : map
deactivate MAP_MAPPER

CTRL -> MAP : city = createCity(cityName, location, houseBlocks)
activate MAP
MAP --> CTRL : city
deactivate MAP

CTRL --> UI : city created
deactivate CTRL

UI -> EDITOR : success
deactivate UI
deactivate EDITOR
@enduml
